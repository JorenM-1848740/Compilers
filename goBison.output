State 90 conflicts: 1 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SEMICOLON SourceFileH1

    2 SourceFileH1: %empty
    3             | SourceFileH1 TopLevelDecl SEMICOLON

    4 Block: LBRACE StatementList RBRACE

    5 StatementList: %empty
    6              | StatementList Statement SEMICOLON

    7 IdentifierList: IDENTIFIER
    8               | IdentifierList COMMA IDENTIFIER

    9 Type: INT
   10     | BOOL
   11     | LPAREN Type RPAREN

   12 ExpressionList: Expression
   13               | ExpressionList COMMA Expression

   14 Declaration: VarDecl

   15 TopLevelDecl: Declaration
   16             | FunctionDecl

   17 VarDecl: VAR VarSpec
   18        | VAR LPAREN VarSpecList RPAREN

   19 VarSpecList: %empty
   20            | VarSpec SEMICOLON VarSpecList

   21 VarSpec: IdentifierList ASSIGN ExpressionList
   22        | IdentifierList Type
   23        | IdentifierList Type ASSIGN ExpressionList

   24 FunctionDecl: FUNC FunctionName Signature
   25             | FUNC FunctionName Signature FunctionBody

   26 FunctionName: IDENTIFIER

   27 FunctionBody: Block

   28 Signature: Parameters
   29          | Parameters Result

   30 Result: Parameters
   31       | Type

   32 Parameters: LPAREN RPAREN
   33           | LPAREN ParameterList RPAREN
   34           | LPAREN ParameterList COMMA RPAREN

   35 ParameterList: ParameterDecl
   36              | ParameterList COMMA ParameterDecl

   37 ParameterDecl: IdentifierList Type
   38              | Type

   39 Operand: Literal
   40        | OperandName
   41        | LPAREN Expression RPAREN

   42 Literal: BasicLit

   43 BasicLit: INTLITERAL
   44         | BOOLLITERAL

   45 OperandName: IDENTIFIER

   46 PrimaryExpr: Operand
   47            | PrimaryExpr Arguments

   48 Arguments: LPAREN RPAREN
   49          | LPAREN ExpressionList RPAREN
   50          | LPAREN Type RPAREN
   51          | LPAREN Type COMMA ExpressionList RPAREN
   52          | LPAREN ExpressionList COMMA RPAREN
   53          | LPAREN Type COMMA RPAREN
   54          | LPAREN Type COMMA ExpressionList COMMA RPAREN

   55 Expression: UnaryExpr
   56           | Expression OR Expression
   57           | Expression AND Expression
   58           | Expression PLUS Expression
   59           | Expression MIN Expression
   60           | Expression MUL Expression
   61           | Expression DIV Expression
   62           | Expression GT Expression
   63           | Expression GE Expression
   64           | Expression LT Expression
   65           | Expression LE Expression
   66           | Expression EQ Expression
   67           | Expression NE Expression

   68 UnaryExpr: PrimaryExpr
   69          | Unary_op UnaryExpr

   70 Unary_op: PLUS
   71         | MIN
   72         | NOT

   73 Statement: Declaration
   74          | SimpleStmt
   75          | ReturnStmt
   76          | Block
   77          | IfStmt
   78          | ForStmt

   79 SimpleStmt: EmptyStmt
   80           | ExpressionStmt
   81           | IncDecStmt
   82           | Assignment

   83 EmptyStmt: %empty

   84 ExpressionStmt: Expression

   85 IncDecStmt: Expression INC
   86           | Expression DEC

   87 Assignment: ExpressionList Assign_op ExpressionList

   88 Assign_op: PLUSASSIGN
   89          | MINASSIGN
   90          | MULASSIGN
   91          | DIVASSIGN

   92 ReturnStmt: RETURN
   93           | RETURN ExpressionList

   94 IfStmt: IF Expression Block
   95       | IF Expression Block ELSE IfStmt
   96       | IF Expression Block ELSE Block
   97       | IF SimpleStmt SEMICOLON Expression Block
   98       | IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt
   99       | IF SimpleStmt SEMICOLON Expression Block ELSE Block

  100 ForStmt: FOR Block
  101        | FOR Condition Block
  102        | FOR ForClause Block

  103 Condition: Expression

  104 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt
  105          | InitStmt SEMICOLON SEMICOLON PostStmt

  106 InitStmt: SimpleStmt

  107 PostStmt: SimpleStmt

  108 PackageClause: PACKAGE PackageName

  109 PackageName: IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMICOLON (258) 1 3 6 20 97 98 99 104 105
    COMMA (259) 8 13 34 36 51 52 53 54
    IDENTIFIER (260) 7 8 26 45 109
    INTLITERAL (261) 43
    BOOLLITERAL (262) 44
    INT (263) 9
    BOOL (264) 10
    PACKAGE (265) 108
    RETURN (266) 92 93
    VAR (267) 17 18
    IF (268) 94 95 96 97 98 99
    FOR (269) 100 101 102
    FUNC (270) 24 25
    ELSE (271) 95 96 98 99
    LPAREN (272) 11 18 32 33 34 41 48 49 50 51 52 53 54
    RPAREN (273) 11 18 32 33 34 41 48 49 50 51 52 53 54
    LBRACE (274) 4
    RBRACE (275) 4
    PLUS (276) 58 70
    MIN (277) 59 71
    MUL (278) 60
    DIV (279) 61
    PLUSASSIGN (280) 88
    MINASSIGN (281) 89
    MULASSIGN (282) 90
    DIVASSIGN (283) 91
    ASSIGN (284) 21 23
    UMINUS (285)
    AND (286) 57
    OR (287) 56
    NOT (288) 72
    INC (289) 85
    DEC (290) 86
    GT (291) 62
    GE (292) 63
    LT (293) 64
    LE (294) 65
    EQ (295) 66
    NE (296) 67


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    SourceFile (43)
        on left: 1
        on right: 0
    SourceFileH1 (44)
        on left: 2 3
        on right: 1 3
    Block (45)
        on left: 4
        on right: 27 76 94 95 96 97 98 99 100 101 102
    StatementList (46)
        on left: 5 6
        on right: 4 6
    IdentifierList (47)
        on left: 7 8
        on right: 8 21 22 23 37
    Type (48)
        on left: 9 10 11
        on right: 11 22 23 31 37 38 50 51 53 54
    ExpressionList (49)
        on left: 12 13
        on right: 13 21 23 49 51 52 54 87 93
    Declaration (50)
        on left: 14
        on right: 15 73
    TopLevelDecl (51)
        on left: 15 16
        on right: 3
    VarDecl (52)
        on left: 17 18
        on right: 14
    VarSpecList (53)
        on left: 19 20
        on right: 18 20
    VarSpec (54)
        on left: 21 22 23
        on right: 17 20
    FunctionDecl (55)
        on left: 24 25
        on right: 16
    FunctionName (56)
        on left: 26
        on right: 24 25
    FunctionBody (57)
        on left: 27
        on right: 25
    Signature (58)
        on left: 28 29
        on right: 24 25
    Result (59)
        on left: 30 31
        on right: 29
    Parameters (60)
        on left: 32 33 34
        on right: 28 29 30
    ParameterList (61)
        on left: 35 36
        on right: 33 34 36
    ParameterDecl (62)
        on left: 37 38
        on right: 35 36
    Operand (63)
        on left: 39 40 41
        on right: 46
    Literal (64)
        on left: 42
        on right: 39
    BasicLit (65)
        on left: 43 44
        on right: 42
    OperandName (66)
        on left: 45
        on right: 40
    PrimaryExpr (67)
        on left: 46 47
        on right: 47 68
    Arguments (68)
        on left: 48 49 50 51 52 53 54
        on right: 47
    Expression (69)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 12 13 41 56 57 58 59 60 61 62 63 64 65 66 67 84 85 86 94 95 96 97 98 99 103
    UnaryExpr (70)
        on left: 68 69
        on right: 55 69
    Unary_op (71)
        on left: 70 71 72
        on right: 69
    Statement (72)
        on left: 73 74 75 76 77 78
        on right: 6
    SimpleStmt (73)
        on left: 79 80 81 82
        on right: 74 97 98 99 106 107
    EmptyStmt (74)
        on left: 83
        on right: 79
    ExpressionStmt (75)
        on left: 84
        on right: 80
    IncDecStmt (76)
        on left: 85 86
        on right: 81
    Assignment (77)
        on left: 87
        on right: 82
    Assign_op (78)
        on left: 88 89 90 91
        on right: 87
    ReturnStmt (79)
        on left: 92 93
        on right: 75
    IfStmt (80)
        on left: 94 95 96 97 98 99
        on right: 77 95 98
    ForStmt (81)
        on left: 100 101 102
        on right: 78
    Condition (82)
        on left: 103
        on right: 101 104
    ForClause (83)
        on left: 104 105
        on right: 102
    InitStmt (84)
        on left: 106
        on right: 104 105
    PostStmt (85)
        on left: 107
        on right: 104 105
    PackageClause (86)
        on left: 108
        on right: 1
    PackageName (87)
        on left: 109
        on right: 108


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

  108 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SEMICOLON SourceFileH1

    SEMICOLON  shift, and go to state 7


State 4

  109 PackageName: IDENTIFIER .

    $default  reduce using rule 109 (PackageName)


State 5

  108 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 108 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SEMICOLON . SourceFileH1

    $default  reduce using rule 2 (SourceFileH1)

    SourceFileH1  go to state 8


State 8

    1 SourceFile: PackageClause SEMICOLON SourceFileH1 .
    3 SourceFileH1: SourceFileH1 . TopLevelDecl SEMICOLON

    VAR   shift, and go to state 9
    FUNC  shift, and go to state 10

    $default  reduce using rule 1 (SourceFile)

    Declaration   go to state 11
    TopLevelDecl  go to state 12
    VarDecl       go to state 13
    FunctionDecl  go to state 14


State 9

   17 VarDecl: VAR . VarSpec
   18        | VAR . LPAREN VarSpecList RPAREN

    IDENTIFIER  shift, and go to state 15
    LPAREN      shift, and go to state 16

    IdentifierList  go to state 17
    VarSpec         go to state 18


State 10

   24 FunctionDecl: FUNC . FunctionName Signature
   25             | FUNC . FunctionName Signature FunctionBody

    IDENTIFIER  shift, and go to state 19

    FunctionName  go to state 20


State 11

   15 TopLevelDecl: Declaration .

    $default  reduce using rule 15 (TopLevelDecl)


State 12

    3 SourceFileH1: SourceFileH1 TopLevelDecl . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 13

   14 Declaration: VarDecl .

    $default  reduce using rule 14 (Declaration)


State 14

   16 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 16 (TopLevelDecl)


State 15

    7 IdentifierList: IDENTIFIER .

    $default  reduce using rule 7 (IdentifierList)


State 16

   18 VarDecl: VAR LPAREN . VarSpecList RPAREN

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 19 (VarSpecList)

    IdentifierList  go to state 17
    VarSpecList     go to state 22
    VarSpec         go to state 23


State 17

    8 IdentifierList: IdentifierList . COMMA IDENTIFIER
   21 VarSpec: IdentifierList . ASSIGN ExpressionList
   22        | IdentifierList . Type
   23        | IdentifierList . Type ASSIGN ExpressionList

    COMMA   shift, and go to state 24
    INT     shift, and go to state 25
    BOOL    shift, and go to state 26
    LPAREN  shift, and go to state 27
    ASSIGN  shift, and go to state 28

    Type  go to state 29


State 18

   17 VarDecl: VAR VarSpec .

    $default  reduce using rule 17 (VarDecl)


State 19

   26 FunctionName: IDENTIFIER .

    $default  reduce using rule 26 (FunctionName)


State 20

   24 FunctionDecl: FUNC FunctionName . Signature
   25             | FUNC FunctionName . Signature FunctionBody

    LPAREN  shift, and go to state 30

    Signature   go to state 31
    Parameters  go to state 32


State 21

    3 SourceFileH1: SourceFileH1 TopLevelDecl SEMICOLON .

    $default  reduce using rule 3 (SourceFileH1)


State 22

   18 VarDecl: VAR LPAREN VarSpecList . RPAREN

    RPAREN  shift, and go to state 33


State 23

   20 VarSpecList: VarSpec . SEMICOLON VarSpecList

    SEMICOLON  shift, and go to state 34


State 24

    8 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 35


State 25

    9 Type: INT .

    $default  reduce using rule 9 (Type)


State 26

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 27

   11 Type: LPAREN . Type RPAREN

    INT     shift, and go to state 25
    BOOL    shift, and go to state 26
    LPAREN  shift, and go to state 27

    Type  go to state 36


State 28

   21 VarSpec: IdentifierList ASSIGN . ExpressionList

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    ExpressionList  go to state 44
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 50
    UnaryExpr       go to state 51
    Unary_op        go to state 52


State 29

   22 VarSpec: IdentifierList Type .
   23        | IdentifierList Type . ASSIGN ExpressionList

    ASSIGN  shift, and go to state 53

    $default  reduce using rule 22 (VarSpec)


State 30

   32 Parameters: LPAREN . RPAREN
   33           | LPAREN . ParameterList RPAREN
   34           | LPAREN . ParameterList COMMA RPAREN

    IDENTIFIER  shift, and go to state 15
    INT         shift, and go to state 25
    BOOL        shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 54

    IdentifierList  go to state 55
    Type            go to state 56
    ParameterList   go to state 57
    ParameterDecl   go to state 58


State 31

   24 FunctionDecl: FUNC FunctionName Signature .
   25             | FUNC FunctionName Signature . FunctionBody

    LBRACE  shift, and go to state 59

    $default  reduce using rule 24 (FunctionDecl)

    Block         go to state 60
    FunctionBody  go to state 61


State 32

   28 Signature: Parameters .
   29          | Parameters . Result

    INT     shift, and go to state 25
    BOOL    shift, and go to state 26
    LPAREN  shift, and go to state 62

    $default  reduce using rule 28 (Signature)

    Type        go to state 63
    Result      go to state 64
    Parameters  go to state 65


State 33

   18 VarDecl: VAR LPAREN VarSpecList RPAREN .

    $default  reduce using rule 18 (VarDecl)


State 34

   20 VarSpecList: VarSpec SEMICOLON . VarSpecList

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 19 (VarSpecList)

    IdentifierList  go to state 17
    VarSpecList     go to state 66
    VarSpec         go to state 23


State 35

    8 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 8 (IdentifierList)


State 36

   11 Type: LPAREN Type . RPAREN

    RPAREN  shift, and go to state 67


State 37

   45 OperandName: IDENTIFIER .

    $default  reduce using rule 45 (OperandName)


State 38

   43 BasicLit: INTLITERAL .

    $default  reduce using rule 43 (BasicLit)


State 39

   44 BasicLit: BOOLLITERAL .

    $default  reduce using rule 44 (BasicLit)


State 40

   41 Operand: LPAREN . Expression RPAREN

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 68
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 41

   70 Unary_op: PLUS .

    $default  reduce using rule 70 (Unary_op)


State 42

   71 Unary_op: MIN .

    $default  reduce using rule 71 (Unary_op)


State 43

   72 Unary_op: NOT .

    $default  reduce using rule 72 (Unary_op)


State 44

   13 ExpressionList: ExpressionList . COMMA Expression
   21 VarSpec: IdentifierList ASSIGN ExpressionList .

    COMMA  shift, and go to state 69

    $default  reduce using rule 21 (VarSpec)


State 45

   46 PrimaryExpr: Operand .

    $default  reduce using rule 46 (PrimaryExpr)


State 46

   39 Operand: Literal .

    $default  reduce using rule 39 (Operand)


State 47

   42 Literal: BasicLit .

    $default  reduce using rule 42 (Literal)


State 48

   40 Operand: OperandName .

    $default  reduce using rule 40 (Operand)


State 49

   47 PrimaryExpr: PrimaryExpr . Arguments
   68 UnaryExpr: PrimaryExpr .

    LPAREN  shift, and go to state 70

    $default  reduce using rule 68 (UnaryExpr)

    Arguments  go to state 71


State 50

   12 ExpressionList: Expression .
   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    AND   shift, and go to state 76
    OR    shift, and go to state 77
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    $default  reduce using rule 12 (ExpressionList)


State 51

   55 Expression: UnaryExpr .

    $default  reduce using rule 55 (Expression)


State 52

   69 UnaryExpr: Unary_op . UnaryExpr

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    UnaryExpr    go to state 84
    Unary_op     go to state 52


State 53

   23 VarSpec: IdentifierList Type ASSIGN . ExpressionList

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    ExpressionList  go to state 85
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 50
    UnaryExpr       go to state 51
    Unary_op        go to state 52


State 54

   32 Parameters: LPAREN RPAREN .

    $default  reduce using rule 32 (Parameters)


State 55

    8 IdentifierList: IdentifierList . COMMA IDENTIFIER
   37 ParameterDecl: IdentifierList . Type

    COMMA   shift, and go to state 24
    INT     shift, and go to state 25
    BOOL    shift, and go to state 26
    LPAREN  shift, and go to state 27

    Type  go to state 86


State 56

   38 ParameterDecl: Type .

    $default  reduce using rule 38 (ParameterDecl)


State 57

   33 Parameters: LPAREN ParameterList . RPAREN
   34           | LPAREN ParameterList . COMMA RPAREN
   36 ParameterList: ParameterList . COMMA ParameterDecl

    COMMA   shift, and go to state 87
    RPAREN  shift, and go to state 88


State 58

   35 ParameterList: ParameterDecl .

    $default  reduce using rule 35 (ParameterList)


State 59

    4 Block: LBRACE . StatementList RBRACE

    $default  reduce using rule 5 (StatementList)

    StatementList  go to state 89


State 60

   27 FunctionBody: Block .

    $default  reduce using rule 27 (FunctionBody)


State 61

   25 FunctionDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 25 (FunctionDecl)


State 62

   11 Type: LPAREN . Type RPAREN
   32 Parameters: LPAREN . RPAREN
   33           | LPAREN . ParameterList RPAREN
   34           | LPAREN . ParameterList COMMA RPAREN

    IDENTIFIER  shift, and go to state 15
    INT         shift, and go to state 25
    BOOL        shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 54

    IdentifierList  go to state 55
    Type            go to state 90
    ParameterList   go to state 57
    ParameterDecl   go to state 58


State 63

   31 Result: Type .

    $default  reduce using rule 31 (Result)


State 64

   29 Signature: Parameters Result .

    $default  reduce using rule 29 (Signature)


State 65

   30 Result: Parameters .

    $default  reduce using rule 30 (Result)


State 66

   20 VarSpecList: VarSpec SEMICOLON VarSpecList .

    $default  reduce using rule 20 (VarSpecList)


State 67

   11 Type: LPAREN Type RPAREN .

    $default  reduce using rule 11 (Type)


State 68

   41 Operand: LPAREN Expression . RPAREN
   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    RPAREN  shift, and go to state 91
    PLUS    shift, and go to state 72
    MIN     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GT      shift, and go to state 78
    GE      shift, and go to state 79
    LT      shift, and go to state 80
    LE      shift, and go to state 81
    EQ      shift, and go to state 82
    NE      shift, and go to state 83


State 69

   13 ExpressionList: ExpressionList COMMA . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 92
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 70

   48 Arguments: LPAREN . RPAREN
   49          | LPAREN . ExpressionList RPAREN
   50          | LPAREN . Type RPAREN
   51          | LPAREN . Type COMMA ExpressionList RPAREN
   52          | LPAREN . ExpressionList COMMA RPAREN
   53          | LPAREN . Type COMMA RPAREN
   54          | LPAREN . Type COMMA ExpressionList COMMA RPAREN

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    INT          shift, and go to state 25
    BOOL         shift, and go to state 26
    LPAREN       shift, and go to state 93
    RPAREN       shift, and go to state 94
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Type            go to state 95
    ExpressionList  go to state 96
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 50
    UnaryExpr       go to state 51
    Unary_op        go to state 52


State 71

   47 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 47 (PrimaryExpr)


State 72

   58 Expression: Expression PLUS . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 97
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 73

   59 Expression: Expression MIN . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 98
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 74

   60 Expression: Expression MUL . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 99
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 75

   61 Expression: Expression DIV . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 100
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 76

   57 Expression: Expression AND . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 101
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 77

   56 Expression: Expression OR . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 102
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 78

   62 Expression: Expression GT . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 103
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 79

   63 Expression: Expression GE . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 104
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 80

   64 Expression: Expression LT . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 105
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 81

   65 Expression: Expression LE . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 106
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 82

   66 Expression: Expression EQ . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 107
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 83

   67 Expression: Expression NE . Expression

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 108
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 84

   69 UnaryExpr: Unary_op UnaryExpr .

    $default  reduce using rule 69 (UnaryExpr)


State 85

   13 ExpressionList: ExpressionList . COMMA Expression
   23 VarSpec: IdentifierList Type ASSIGN ExpressionList .

    COMMA  shift, and go to state 69

    $default  reduce using rule 23 (VarSpec)


State 86

   37 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 37 (ParameterDecl)


State 87

   34 Parameters: LPAREN ParameterList COMMA . RPAREN
   36 ParameterList: ParameterList COMMA . ParameterDecl

    IDENTIFIER  shift, and go to state 15
    INT         shift, and go to state 25
    BOOL        shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 109

    IdentifierList  go to state 55
    Type            go to state 56
    ParameterDecl   go to state 110


State 88

   33 Parameters: LPAREN ParameterList RPAREN .

    $default  reduce using rule 33 (Parameters)


State 89

    4 Block: LBRACE StatementList . RBRACE
    6 StatementList: StatementList . Statement SEMICOLON

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    RETURN       shift, and go to state 111
    VAR          shift, and go to state 9
    IF           shift, and go to state 112
    FOR          shift, and go to state 113
    LPAREN       shift, and go to state 40
    LBRACE       shift, and go to state 59
    RBRACE       shift, and go to state 114
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    $default  reduce using rule 83 (EmptyStmt)

    Block           go to state 115
    ExpressionList  go to state 116
    Declaration     go to state 117
    VarDecl         go to state 13
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 118
    UnaryExpr       go to state 51
    Unary_op        go to state 52
    Statement       go to state 119
    SimpleStmt      go to state 120
    EmptyStmt       go to state 121
    ExpressionStmt  go to state 122
    IncDecStmt      go to state 123
    Assignment      go to state 124
    ReturnStmt      go to state 125
    IfStmt          go to state 126
    ForStmt         go to state 127


State 90

   11 Type: LPAREN Type . RPAREN
   38 ParameterDecl: Type .

    RPAREN  shift, and go to state 67

    RPAREN    [reduce using rule 38 (ParameterDecl)]
    $default  reduce using rule 38 (ParameterDecl)


State 91

   41 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 41 (Operand)


State 92

   13 ExpressionList: ExpressionList COMMA Expression .
   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    AND   shift, and go to state 76
    OR    shift, and go to state 77
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    $default  reduce using rule 13 (ExpressionList)


State 93

   11 Type: LPAREN . Type RPAREN
   41 Operand: LPAREN . Expression RPAREN

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    INT          shift, and go to state 25
    BOOL         shift, and go to state 26
    LPAREN       shift, and go to state 93
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Type         go to state 36
    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 68
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 94

   48 Arguments: LPAREN RPAREN .

    $default  reduce using rule 48 (Arguments)


State 95

   50 Arguments: LPAREN Type . RPAREN
   51          | LPAREN Type . COMMA ExpressionList RPAREN
   53          | LPAREN Type . COMMA RPAREN
   54          | LPAREN Type . COMMA ExpressionList COMMA RPAREN

    COMMA   shift, and go to state 128
    RPAREN  shift, and go to state 129


State 96

   13 ExpressionList: ExpressionList . COMMA Expression
   49 Arguments: LPAREN ExpressionList . RPAREN
   52          | LPAREN ExpressionList . COMMA RPAREN

    COMMA   shift, and go to state 130
    RPAREN  shift, and go to state 131


State 97

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   58           | Expression PLUS Expression .
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    MUL  shift, and go to state 74
    DIV  shift, and go to state 75

    $default  reduce using rule 58 (Expression)


State 98

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   59           | Expression MIN Expression .
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    MUL  shift, and go to state 74
    DIV  shift, and go to state 75

    $default  reduce using rule 59 (Expression)


State 99

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   60           | Expression MUL Expression .
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    $default  reduce using rule 60 (Expression)


State 100

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   61           | Expression DIV Expression .
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    $default  reduce using rule 61 (Expression)


State 101

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   57           | Expression AND Expression .
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    $default  reduce using rule 57 (Expression)


State 102

   56 Expression: Expression . OR Expression
   56           | Expression OR Expression .
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    AND   shift, and go to state 76
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    $default  reduce using rule 56 (Expression)


State 103

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   62           | Expression GT Expression .
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75

    $default  reduce using rule 62 (Expression)


State 104

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   63           | Expression GE Expression .
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75

    $default  reduce using rule 63 (Expression)


State 105

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   64           | Expression LT Expression .
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75

    $default  reduce using rule 64 (Expression)


State 106

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   65           | Expression LE Expression .
   66           | Expression . EQ Expression
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75

    $default  reduce using rule 65 (Expression)


State 107

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   66           | Expression EQ Expression .
   67           | Expression . NE Expression

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75

    $default  reduce using rule 66 (Expression)


State 108

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression
   67           | Expression NE Expression .

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75

    $default  reduce using rule 67 (Expression)


State 109

   34 Parameters: LPAREN ParameterList COMMA RPAREN .

    $default  reduce using rule 34 (Parameters)


State 110

   36 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 36 (ParameterList)


State 111

   92 ReturnStmt: RETURN .
   93           | RETURN . ExpressionList

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    $default  reduce using rule 92 (ReturnStmt)

    ExpressionList  go to state 132
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 50
    UnaryExpr       go to state 51
    Unary_op        go to state 52


State 112

   94 IfStmt: IF . Expression Block
   95       | IF . Expression Block ELSE IfStmt
   96       | IF . Expression Block ELSE Block
   97       | IF . SimpleStmt SEMICOLON Expression Block
   98       | IF . SimpleStmt SEMICOLON Expression Block ELSE IfStmt
   99       | IF . SimpleStmt SEMICOLON Expression Block ELSE Block

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    $default  reduce using rule 83 (EmptyStmt)

    ExpressionList  go to state 116
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 133
    UnaryExpr       go to state 51
    Unary_op        go to state 52
    SimpleStmt      go to state 134
    EmptyStmt       go to state 121
    ExpressionStmt  go to state 122
    IncDecStmt      go to state 123
    Assignment      go to state 124


State 113

  100 ForStmt: FOR . Block
  101        | FOR . Condition Block
  102        | FOR . ForClause Block

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    LBRACE       shift, and go to state 59
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    $default  reduce using rule 83 (EmptyStmt)

    Block           go to state 135
    ExpressionList  go to state 116
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 136
    UnaryExpr       go to state 51
    Unary_op        go to state 52
    SimpleStmt      go to state 137
    EmptyStmt       go to state 121
    ExpressionStmt  go to state 122
    IncDecStmt      go to state 123
    Assignment      go to state 124
    Condition       go to state 138
    ForClause       go to state 139
    InitStmt        go to state 140


State 114

    4 Block: LBRACE StatementList RBRACE .

    $default  reduce using rule 4 (Block)


State 115

   76 Statement: Block .

    $default  reduce using rule 76 (Statement)


State 116

   13 ExpressionList: ExpressionList . COMMA Expression
   87 Assignment: ExpressionList . Assign_op ExpressionList

    COMMA       shift, and go to state 69
    PLUSASSIGN  shift, and go to state 141
    MINASSIGN   shift, and go to state 142
    MULASSIGN   shift, and go to state 143
    DIVASSIGN   shift, and go to state 144

    Assign_op  go to state 145


State 117

   73 Statement: Declaration .

    $default  reduce using rule 73 (Statement)


State 118

   12 ExpressionList: Expression .
   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression
   84 ExpressionStmt: Expression .
   85 IncDecStmt: Expression . INC
   86           | Expression . DEC

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    AND   shift, and go to state 76
    OR    shift, and go to state 77
    INC   shift, and go to state 146
    DEC   shift, and go to state 147
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    SEMICOLON  reduce using rule 84 (ExpressionStmt)
    LBRACE     reduce using rule 84 (ExpressionStmt)
    $default   reduce using rule 12 (ExpressionList)


State 119

    6 StatementList: StatementList Statement . SEMICOLON

    SEMICOLON  shift, and go to state 148


State 120

   74 Statement: SimpleStmt .

    $default  reduce using rule 74 (Statement)


State 121

   79 SimpleStmt: EmptyStmt .

    $default  reduce using rule 79 (SimpleStmt)


State 122

   80 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 80 (SimpleStmt)


State 123

   81 SimpleStmt: IncDecStmt .

    $default  reduce using rule 81 (SimpleStmt)


State 124

   82 SimpleStmt: Assignment .

    $default  reduce using rule 82 (SimpleStmt)


State 125

   75 Statement: ReturnStmt .

    $default  reduce using rule 75 (Statement)


State 126

   77 Statement: IfStmt .

    $default  reduce using rule 77 (Statement)


State 127

   78 Statement: ForStmt .

    $default  reduce using rule 78 (Statement)


State 128

   51 Arguments: LPAREN Type COMMA . ExpressionList RPAREN
   53          | LPAREN Type COMMA . RPAREN
   54          | LPAREN Type COMMA . ExpressionList COMMA RPAREN

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    RPAREN       shift, and go to state 149
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    ExpressionList  go to state 150
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 50
    UnaryExpr       go to state 51
    Unary_op        go to state 52


State 129

   50 Arguments: LPAREN Type RPAREN .

    $default  reduce using rule 50 (Arguments)


State 130

   13 ExpressionList: ExpressionList COMMA . Expression
   52 Arguments: LPAREN ExpressionList COMMA . RPAREN

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    RPAREN       shift, and go to state 151
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 92
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 131

   49 Arguments: LPAREN ExpressionList RPAREN .

    $default  reduce using rule 49 (Arguments)


State 132

   13 ExpressionList: ExpressionList . COMMA Expression
   93 ReturnStmt: RETURN ExpressionList .

    COMMA  shift, and go to state 69

    $default  reduce using rule 93 (ReturnStmt)


State 133

   12 ExpressionList: Expression .
   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression
   84 ExpressionStmt: Expression .
   85 IncDecStmt: Expression . INC
   86           | Expression . DEC
   94 IfStmt: IF Expression . Block
   95       | IF Expression . Block ELSE IfStmt
   96       | IF Expression . Block ELSE Block

    LBRACE  shift, and go to state 59
    PLUS    shift, and go to state 72
    MIN     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77
    INC     shift, and go to state 146
    DEC     shift, and go to state 147
    GT      shift, and go to state 78
    GE      shift, and go to state 79
    LT      shift, and go to state 80
    LE      shift, and go to state 81
    EQ      shift, and go to state 82
    NE      shift, and go to state 83

    SEMICOLON  reduce using rule 84 (ExpressionStmt)
    $default   reduce using rule 12 (ExpressionList)

    Block  go to state 152


State 134

   97 IfStmt: IF SimpleStmt . SEMICOLON Expression Block
   98       | IF SimpleStmt . SEMICOLON Expression Block ELSE IfStmt
   99       | IF SimpleStmt . SEMICOLON Expression Block ELSE Block

    SEMICOLON  shift, and go to state 153


State 135

  100 ForStmt: FOR Block .

    $default  reduce using rule 100 (ForStmt)


State 136

   12 ExpressionList: Expression .
   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression
   84 ExpressionStmt: Expression .
   85 IncDecStmt: Expression . INC
   86           | Expression . DEC
  103 Condition: Expression .

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    AND   shift, and go to state 76
    OR    shift, and go to state 77
    INC   shift, and go to state 146
    DEC   shift, and go to state 147
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    SEMICOLON  reduce using rule 84 (ExpressionStmt)
    LBRACE     reduce using rule 103 (Condition)
    $default   reduce using rule 12 (ExpressionList)


State 137

  106 InitStmt: SimpleStmt .

    $default  reduce using rule 106 (InitStmt)


State 138

  101 ForStmt: FOR Condition . Block

    LBRACE  shift, and go to state 59

    Block  go to state 154


State 139

  102 ForStmt: FOR ForClause . Block

    LBRACE  shift, and go to state 59

    Block  go to state 155


State 140

  104 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt
  105          | InitStmt . SEMICOLON SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 156


State 141

   88 Assign_op: PLUSASSIGN .

    $default  reduce using rule 88 (Assign_op)


State 142

   89 Assign_op: MINASSIGN .

    $default  reduce using rule 89 (Assign_op)


State 143

   90 Assign_op: MULASSIGN .

    $default  reduce using rule 90 (Assign_op)


State 144

   91 Assign_op: DIVASSIGN .

    $default  reduce using rule 91 (Assign_op)


State 145

   87 Assignment: ExpressionList Assign_op . ExpressionList

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    ExpressionList  go to state 157
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 50
    UnaryExpr       go to state 51
    Unary_op        go to state 52


State 146

   85 IncDecStmt: Expression INC .

    $default  reduce using rule 85 (IncDecStmt)


State 147

   86 IncDecStmt: Expression DEC .

    $default  reduce using rule 86 (IncDecStmt)


State 148

    6 StatementList: StatementList Statement SEMICOLON .

    $default  reduce using rule 6 (StatementList)


State 149

   53 Arguments: LPAREN Type COMMA RPAREN .

    $default  reduce using rule 53 (Arguments)


State 150

   13 ExpressionList: ExpressionList . COMMA Expression
   51 Arguments: LPAREN Type COMMA ExpressionList . RPAREN
   54          | LPAREN Type COMMA ExpressionList . COMMA RPAREN

    COMMA   shift, and go to state 158
    RPAREN  shift, and go to state 159


State 151

   52 Arguments: LPAREN ExpressionList COMMA RPAREN .

    $default  reduce using rule 52 (Arguments)


State 152

   94 IfStmt: IF Expression Block .
   95       | IF Expression Block . ELSE IfStmt
   96       | IF Expression Block . ELSE Block

    ELSE  shift, and go to state 160

    $default  reduce using rule 94 (IfStmt)


State 153

   97 IfStmt: IF SimpleStmt SEMICOLON . Expression Block
   98       | IF SimpleStmt SEMICOLON . Expression Block ELSE IfStmt
   99       | IF SimpleStmt SEMICOLON . Expression Block ELSE Block

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 161
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 154

  101 ForStmt: FOR Condition Block .

    $default  reduce using rule 101 (ForStmt)


State 155

  102 ForStmt: FOR ForClause Block .

    $default  reduce using rule 102 (ForStmt)


State 156

  104 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt
  105          | InitStmt SEMICOLON . SEMICOLON PostStmt

    SEMICOLON    shift, and go to state 162
    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 163
    UnaryExpr    go to state 51
    Unary_op     go to state 52
    Condition    go to state 164


State 157

   13 ExpressionList: ExpressionList . COMMA Expression
   87 Assignment: ExpressionList Assign_op ExpressionList .

    COMMA  shift, and go to state 69

    $default  reduce using rule 87 (Assignment)


State 158

   13 ExpressionList: ExpressionList COMMA . Expression
   54 Arguments: LPAREN Type COMMA ExpressionList COMMA . RPAREN

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    RPAREN       shift, and go to state 165
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    Operand      go to state 45
    Literal      go to state 46
    BasicLit     go to state 47
    OperandName  go to state 48
    PrimaryExpr  go to state 49
    Expression   go to state 92
    UnaryExpr    go to state 51
    Unary_op     go to state 52


State 159

   51 Arguments: LPAREN Type COMMA ExpressionList RPAREN .

    $default  reduce using rule 51 (Arguments)


State 160

   95 IfStmt: IF Expression Block ELSE . IfStmt
   96       | IF Expression Block ELSE . Block

    IF      shift, and go to state 112
    LBRACE  shift, and go to state 59

    Block   go to state 166
    IfStmt  go to state 167


State 161

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression
   97 IfStmt: IF SimpleStmt SEMICOLON Expression . Block
   98       | IF SimpleStmt SEMICOLON Expression . Block ELSE IfStmt
   99       | IF SimpleStmt SEMICOLON Expression . Block ELSE Block

    LBRACE  shift, and go to state 59
    PLUS    shift, and go to state 72
    MIN     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GT      shift, and go to state 78
    GE      shift, and go to state 79
    LT      shift, and go to state 80
    LE      shift, and go to state 81
    EQ      shift, and go to state 82
    NE      shift, and go to state 83

    Block  go to state 168


State 162

  105 ForClause: InitStmt SEMICOLON SEMICOLON . PostStmt

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    $default  reduce using rule 83 (EmptyStmt)

    ExpressionList  go to state 116
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 118
    UnaryExpr       go to state 51
    Unary_op        go to state 52
    SimpleStmt      go to state 169
    EmptyStmt       go to state 121
    ExpressionStmt  go to state 122
    IncDecStmt      go to state 123
    Assignment      go to state 124
    PostStmt        go to state 170


State 163

   56 Expression: Expression . OR Expression
   57           | Expression . AND Expression
   58           | Expression . PLUS Expression
   59           | Expression . MIN Expression
   60           | Expression . MUL Expression
   61           | Expression . DIV Expression
   62           | Expression . GT Expression
   63           | Expression . GE Expression
   64           | Expression . LT Expression
   65           | Expression . LE Expression
   66           | Expression . EQ Expression
   67           | Expression . NE Expression
  103 Condition: Expression .

    PLUS  shift, and go to state 72
    MIN   shift, and go to state 73
    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    AND   shift, and go to state 76
    OR    shift, and go to state 77
    GT    shift, and go to state 78
    GE    shift, and go to state 79
    LT    shift, and go to state 80
    LE    shift, and go to state 81
    EQ    shift, and go to state 82
    NE    shift, and go to state 83

    $default  reduce using rule 103 (Condition)


State 164

  104 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 171


State 165

   54 Arguments: LPAREN Type COMMA ExpressionList COMMA RPAREN .

    $default  reduce using rule 54 (Arguments)


State 166

   96 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 96 (IfStmt)


State 167

   95 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 95 (IfStmt)


State 168

   97 IfStmt: IF SimpleStmt SEMICOLON Expression Block .
   98       | IF SimpleStmt SEMICOLON Expression Block . ELSE IfStmt
   99       | IF SimpleStmt SEMICOLON Expression Block . ELSE Block

    ELSE  shift, and go to state 172

    $default  reduce using rule 97 (IfStmt)


State 169

  107 PostStmt: SimpleStmt .

    $default  reduce using rule 107 (PostStmt)


State 170

  105 ForClause: InitStmt SEMICOLON SEMICOLON PostStmt .

    $default  reduce using rule 105 (ForClause)


State 171

  104 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    IDENTIFIER   shift, and go to state 37
    INTLITERAL   shift, and go to state 38
    BOOLLITERAL  shift, and go to state 39
    LPAREN       shift, and go to state 40
    PLUS         shift, and go to state 41
    MIN          shift, and go to state 42
    NOT          shift, and go to state 43

    $default  reduce using rule 83 (EmptyStmt)

    ExpressionList  go to state 116
    Operand         go to state 45
    Literal         go to state 46
    BasicLit        go to state 47
    OperandName     go to state 48
    PrimaryExpr     go to state 49
    Expression      go to state 118
    UnaryExpr       go to state 51
    Unary_op        go to state 52
    SimpleStmt      go to state 169
    EmptyStmt       go to state 121
    ExpressionStmt  go to state 122
    IncDecStmt      go to state 123
    Assignment      go to state 124
    PostStmt        go to state 173


State 172

   98 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE . IfStmt
   99       | IF SimpleStmt SEMICOLON Expression Block ELSE . Block

    IF      shift, and go to state 112
    LBRACE  shift, and go to state 59

    Block   go to state 174
    IfStmt  go to state 175


State 173

  104 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 104 (ForClause)


State 174

   99 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE Block .

    $default  reduce using rule 99 (IfStmt)


State 175

   98 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 98 (IfStmt)
